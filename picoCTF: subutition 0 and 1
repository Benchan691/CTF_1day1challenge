# Substitution Cipher Challenge Write-up

## Overview
This challenge involves solving a monoalphabetic substitution cipher. The encrypted message is provided, and we know the last part follows the format of a picoCTF flag. By mapping the ciphertext of the flag to the expected plaintext format, we derive a substitution key and decrypt the entire message.

## Encrypted Message
```
SYTe (eakdy tkd sjbyndr yar thjm) jdr j yobr kt skxbnyrd ersndzyo skxbryzyzkc. Skcyreyjcye jdr bdrercyrq gzya j ery kt sajhhrcmre gazsa yrey yarzd sdrjyzwzyo, yrsaczsjh (jcq mkkmhzcm) evzhhe, jcq bdklhrx-ekhwzcm jlzhzyo. Sajhhrcmre nenjhho skwrd j cnxlrd kt sjyrmkdzre, jcq garc ekhwrq, rjsa ozrhqe j eydzcm (sjhhrq j thjm) gazsa ze enlxzyyrq yk jc kchzcr eskdzcm erdwzsr. SYTe jdr j mdrjy gjo yk hrjdc j gzqr jddjo kt skxbnyrd ersndzyo evzhhe zc j ejtr, hrmjh rcwzdkcxrcy, jcq jdr akeyrq jcq bhjorq lo xjco ersndzyo mdknbe jdkncq yar gkdhq tkd tnc jcq bdjsyzsr. Tkd yaze bdklhrx, yar thjm ze: bzskSYT{TD3UN3CSO_4774SV5_4D3_S001_7JJ384LS}
```

## Deriving the Substitution Mapping
The last part of the message is the flag in ciphertext: `bzskSYT{TD3UN3CSO_4774SV5_4D3_S001_7JJ384LS}`.

Assuming it decrypts to something like `picoCTF{...}`, we map the letters accordingly. The full mapping is derived by aligning known patterns and common letters, resulting in the following dictionary (where some unused letters are mapped to space for completeness):

| Ciphertext | Plaintext |
|------------|-----------|
| a          | h         |
| b          | p         |
| c          | n         |
| d          | r         |
| e          | s         |
| f          | (space)   |
| g          | w         |
| h          | l         |
| i          | (space)   |
| j          | a         |
| k          | o         |
| l          | b         |
| m          | g         |
| n          | u         |
| o          | y         |
| p          | (space)   |
| q          | d         |
| r          | e         |
| s          | c         |
| t          | f         |
| u          | q         |
| v          | k         |
| w          | v         |
| x          | m         |
| y          | t         |
| z          | i         |

**Note:** Uppercase letters in the ciphertext are handled by converting to uppercase in the plaintext where appropriate. Non-letter characters (like numbers, punctuation) remain unchanged.

## Decryption Script
The following Python script applies the substitution mapping to decrypt the message:

```python
li = {
    'a': 'h',
    'b': 'p',
    'c': 'n',
    'd': 'r',
    'e': 's',
    'f': ' ',  # unused
    'g': 'w',
    'h': 'l',
    'i': ' ',  # unused
    'j': 'a',
    'k': 'o',
    'l': 'b',
    'm': 'g',
    'n': 'u',
    'o': 'y',
    'p': ' ',  # unused
    'q': 'd',
    'r': 'e',
    's': 'c',
    't': 'f',
    'u': 'q',  # used
    'v': 'k',
    'w': 'v',
    'x': 'm',
    'y': 't',
    'z': 'i',
}
text = 'SYTe (eakdy tkd sjbyndr yar thjm) jdr j yobr kt skxbnyrd ersndzyo skxbryzyzkc. Skcyreyjcye jdr bdrercyrq gzya j ery kt sajhhrcmre gazsa yrey yarzd sdrjyzwzyo, yrsaczsjh (jcq mkkmhzcm) evzhhe, jcq bdklhrx-ekhwzcm jlzhzyo. Sajhhrcmre nenjhho skwrd j cnxlrd kt sjyrmkdzre, jcq garc ekhwrq, rjsa ozrhqe j eydzcm (sjhhrq j thjm) gazsa ze enlxzyyrq yk jc kchzcr eskdzcm erdwzsr. SYTe jdr j mdrjy gjo yk hrjdc j gzqr jddjo kt skxbnyrd ersndzyo evzhhe zc j ejtr, hrmjh rcwzdkcxrcy, jcq jdr akeyrq jcq bhjorq lo xjco ersndzyo mdknbe jdkncq yar gkdhq tkd tnc jcq bdjsyzsr. Tkd yaze bdklhrx, yar thjm ze: bzskSYT{TD3UN3CSO_4774SV5_4D3_S001_7JJ384LS}'
ans = ''
for i in text:
    e = i.lower()
    if e in li:
        if i.isupper():
            ans = ans + li[e].upper()
        else:
            ans = ans + li[e]
    else:
        ans = ans + i
print(ans)
```

## Decrypted Message
```
CTFs (short for capture the flag) are a type of computer security competition. Contestants are presented with a set of challenges which test their creativity, technical (and googling) skills, and problem-solving ability. Challenges usually cover a number of categories, and when solved, each yields a string (called a flag) which is submitted to an online scoring service. CTFs are a great way to learn a wide array of computer security skills in a safe, legal environment, and are hosted and played by many security groups around the world for fun and practice. For this problem, the flag is: picoCTF{FR3QU3NCY_4774CK5_4R3_C001_7AA384BC}
```

## Flag
The solved flag is: `picoCTF{FR3QU3NCY_4774CK5_4R3_C001_7AA384BC}`
